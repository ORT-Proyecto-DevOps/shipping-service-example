name: Github Action Workflow CI/CD

on:
  workflow_call:
    inputs:
      CI_ENV:
        required: true
        type: string
      CONTENTFUL_ENVIRONMENT:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_DEFAULT_REGION:
        required: true
      AWS_SESSION_TOKEN:
        required: true
      SONAR_TOKEN_VUE_APP:
        required: true  

jobs:

  setup:
    runs-on: ubuntu-latest
    outputs:
      maven-cache-key: ${{ steps.cache-maven.outputs.cache-key }}
      sonar-cache-key: ${{ steps.cache-sonar.outputs.cache-key }}
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        id: setup-java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
          
      - name: Export JAVA_HOME
        run: echo "JAVA_HOME=$(dirname $(dirname $(readlink -f $(which java))))" >> $GITHUB_ENV

      - name: Cache Maven packages
        id: cache-maven
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Cache SonarCloud packages
        id: cache-sonar
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

  sonarcloud:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Restore SonarCloud cache
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ needs.setup.outputs.sonar-cache-key }}
          restore-keys: ${{ needs.setup.outputs.sonar-cache-key }}

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_SHIPPING_SERVICE }}
          JAVA_HOME: ${{ env.JAVA_HOME }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=ORT-Proyecto-DevOps_shipping-service-example

  build:
    runs-on: ubuntu-latest
    needs: sonarcloud

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Restore Maven cache
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ needs.setup.outputs.maven-cache-key }}
          restore-keys: ${{ needs.setup.outputs.maven-cache-key }}

      - name: Build with Maven
        env:
          JAVA_HOME: ${{ env.JAVA_HOME }}
        run: mvn clean install

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
